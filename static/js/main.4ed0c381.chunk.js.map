{"version":3,"sources":["StartPage.tsx","GamePlayPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","startButton","textAlign","backgroundColor","width","height","borderRadius","fontWeight","fontSize","lineHeight","display","alignItems","color","marginTop","input","playerNameField","background","marginBottom","border","addPlayerBackground","margin","flexDirection","justifyContent","header","errorDialogBox","errorDialogContent","errorDialogMainText","errorDialogSecondaryText","alignContent","padding","okErrorDialogButton","StartPage","styles","React","useState","Map","playerList","setPlayerList","open","setOpen","handleClose","handlePlayerNameInput","event","target","value","set","name","Transition","forwardRef","props","ref","Slide","direction","history","useHistory","className","TextField","onChange","variant","InputProps","Dialog","TransitionComponent","onClose","DialogContent","DialogContentText","Button","onClick","count","forEach","key","push","handleStartButtonClick","GamePlayPage","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ed0c381.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button, makeStyles, TextField, Theme} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport {TransitionProps} from \"@material-ui/core/transitions\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    startButton: {\n        textAlign: \"center\",\n        backgroundColor: \"#005EA2\",\n        width: \"490px\",\n        height: \"112px\",\n        borderRadius: \"10px\",\n        fontWeight: \"bold\",\n        fontSize: \"40px\",\n        lineHeight: \"47px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"#F0F0F0\",\n        marginTop: \"24px\",\n        '&:hover':{\n            backgroundColor: \"#1A4480\"\n        },\n    },\n\n    input: {\n        width: \"237px\",\n        height: \"24px\",\n    },\n\n    playerNameField: {\n        background: \"#E6E6E6\",\n        marginBottom: \"16px\",\n        border: \"1px solid #000000\",\n    },\n\n    addPlayerBackground: {\n        backgroundColor: \"#DCDEE0\",\n        width: \"934px\",\n        height: \"720px\",\n        margin: \"28px auto 0px auto\",\n\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderRadius: \"8px\",\n    },\n\n    header: {\n        marginTop: \"8px\",\n        marginBottom: \"0px\",\n    },\n\n    errorDialogBox:{\n        width: \"522px\",\n        height: \"337px\"\n    },\n\n    errorDialogContent:{\n        width: \"360px\",\n        height: \"144px\",\n    },\n\n    errorDialogMainText: {\n        fontSize: \"22px\",\n        textAlign: \"center\",\n        color: \"black\",\n        width: \"375px\",\n        margin: \"20px 0px 0px 80px\",\n    },\n\n    errorDialogSecondaryText: {\n        fontSize: \"16px\",\n        textAlign: \"center\",\n        alignContent: \"center\",\n        fontWeight: \"bold\",\n        color: \"black\",\n        width: \"360px\",\n        padding: \"15px 0px 0px 80px\",\n    },\n\n    okErrorDialogButton:{\n        width: \"315px\",\n        height: \"62px\",\n        background: \"#005EA2\",\n        borderRadius: \"10px\",\n        textAlign: \"center\",\n        backgroundColor: \"#005EA2\",\n        '&:hover':{\n            backgroundColor: \"#1A4480\"\n        },\n        color: \"#F0F0F0\",\n        fontSize: \"32px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: \"40px 103.5px 48px 103.5px\",\n    },\n}));\n\nconst StartPage: React.FC = () => {\n  const styles = useStyles();\n  const [playerList, setPlayerList] = React.useState(new Map<String, String>());\n  const [open, setOpen] = React.useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n  function handlePlayerNameInput(event: any) {\n     if(event.target.value != \"\") {\n          setPlayerList(playerList.set(event.target.name, event.target.value));\n      }\n  }\n\n    const Transition = React.forwardRef(function Transition(\n        props: TransitionProps & { children?: React.ReactElement<any, any> },\n        ref: React.Ref<unknown>,\n    ) {\n        return <Slide direction=\"up\" ref={ref} {...props} />;\n    });\n\n  function getErrorDialog(){\n      return (\n          <div>\n              <Dialog\n                  open={open}\n                  TransitionComponent={Transition}\n                  onClose={handleClose}>\n                  <DialogContent className={styles.errorDialogBox}>\n                      <DialogContentText className={styles.errorDialogMainText}>\n                         PLEASE HAVE A MINIMUM OF TWO PLAYERS TO START A GAME.\n                      </DialogContentText>\n                      <DialogContentText className={styles.errorDialogSecondaryText}>\n                          *IF YOU WANT TO HAVE FUN AND CHALLENGE YOURSELF, PLEASE ENTER A NAME AS PLAYER TWO.\n                      </DialogContentText>\n                      <Button onClick={handleClose} className={styles.okErrorDialogButton}> OK </Button>\n                  </DialogContent>\n              </Dialog>\n          </div>\n      )\n  }\n\n  const history = useHistory();\n\n  const handleStartButtonClick = () => {\n    let count = 0;\n    playerList.forEach((key, value) => {\n      if (value != \"\") {\n        count++;\n      }\n    });\n\n    if (count > 1) {\n      history.push(\"/game\");\n    }else{\n        setOpen(true);\n    }\n  };\n\n  return (\n    <div className={styles.addPlayerBackground}>\n      <h1 className={styles.header}>You-Kno</h1>\n      <h2>PLEASE ADD UP TO TEN PLAYERS</h2>\n      <TextField\n        name=\"player1\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player2\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player3\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player4\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player5\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player6\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player7\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player8\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player9\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player10\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n        {open && getErrorDialog()}\n      <Button\n        className={styles.startButton}\n        onClick={() => {\n          handleStartButtonClick();\n        }}>Start Game</Button>\n    </div>\n  );\n};\n\nexport default StartPage;\n","import React from \"react\";\n\nfunction GamePlayPage () {\n    return (<div>\n        Game Screen\n    </div>)\n}\n\nexport default GamePlayPage;","import React from \"react\";\nimport \"./App.css\";\nimport { Button, Grid, makeStyles, TextField } from \"@material-ui/core\";\nimport StartPage from \"./StartPage\";\nimport GamePlayPage from \"./GamePlayPage\";\nimport {BrowserRouter as Router, Switch, Route, Link, BrowserRouter} from \"react-router-dom\";\n\nfunction App() {\n  const [isSetupCompleted, setIsSetupCompleted] = React.useState(false);\n\n  return (\n\n    <main>\n        <Router>\n            <Switch>\n                <Route path=\"/you-kno/\" component={StartPage} exact />\n                <Route path=\"/game\" component={GamePlayPage} />\n            </Switch>\n        </Router>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n\n        <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}