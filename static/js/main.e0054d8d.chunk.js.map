{"version":3,"sources":["StartPage.tsx","GamePlayPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","startButton","textAlign","backgroundColor","width","height","borderRadius","fontWeight","fontSize","lineHeight","display","alignItems","color","marginTop","input","playerNameField","background","marginBottom","border","addPlayerBackground","margin","flexDirection","justifyContent","header","StartPage","styles","playerNames","Map","handlePlayerNameInput","event","set","target","name","value","history","useHistory","className","TextField","onChange","variant","InputProps","Button","onClick","count","forEach","key","push","handleStartButtonClick","GamePlayPage","App","React","useState","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0054d8d.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button, Link, makeStyles, TextField, Theme} from \"@material-ui/core\";\nimport { inspect } from \"util\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  startButton: {\n    textAlign: \"center\",\n    backgroundColor: \"#005EA2\",\n    width: \"490px\",\n    height: \"112px\",\n    borderRadius: \"10px\",\n    fontWeight: \"bold\",\n    fontSize: \"40px\",\n    lineHeight: \"47px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"#F0F0F0\",\n    marginTop: \"24px\", //40-16\n    '&:hover':{\n        backgroundColor: \"#1A4480\"\n    },\n  },\n\n  input: {\n    width: \"237px\",\n    height: \"24px\",\n  },\n\n  playerNameField: {\n    background: \"#E6E6E6\",\n    marginBottom: \"16px\",\n    border: \"1px solid #000000\",\n  },\n\n  addPlayerBackground: {\n    backgroundColor: \"#DCDEE0\",\n    width: \"934px\",\n    height: \"720px\",\n    margin: \"28px auto 0px auto\",\n\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"8px\",\n  },\n\n  header: {\n    marginTop: \"8px\",\n    marginBottom: \"0px\",\n  },\n}));\n\nconst StartPage: React.FC = () => {\n  const styles = useStyles();\n  const playerNames: Map<String, String> = new Map<String, String>();\n\n\n  function handlePlayerNameInput(event: any) {\n    playerNames.set(event.target.name, event.target.value);\n  }\n\n  const history = useHistory();\n\n  const handleStartButtonClick = () => {\n    let count = 0;\n    playerNames.forEach((key, value) => {\n      if (value != \"\") {\n        count++;\n      }\n    });\n\n    if (count > 1) {\n      history.push(\"/game\");\n    }\n  };\n  return (\n    <div className={styles.addPlayerBackground}>\n      <h1 className={styles.header}>You-Kno</h1>\n      <h2>PLEASE ADD UP TO TEN PLAYERS</h2>\n      <TextField\n        name=\"player1\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player2\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player3\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player4\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player5\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player6\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player7\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player8\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player9\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <TextField\n        name=\"player10\"\n        onChange={(event) => handlePlayerNameInput(event)}\n        variant=\"outlined\"\n        InputProps={{ className: styles.input }}\n        className={styles.playerNameField}\n      />\n      <Button\n        className={styles.startButton}\n        onClick={() => {\n          handleStartButtonClick();\n        }}\n      >\n        Start Game\n      </Button>\n    </div>\n  );\n};\n\nexport default StartPage;\n","import React from \"react\";\n\nfunction GamePlayPage () {\n    return (<div>\n        Game Screen\n    </div>)\n}\n\nexport default GamePlayPage;","import React from \"react\";\nimport \"./App.css\";\nimport { Button, Grid, makeStyles, TextField } from \"@material-ui/core\";\nimport StartPage from \"./StartPage\";\nimport GamePlayPage from \"./GamePlayPage\";\nimport {BrowserRouter as Router, Switch, Route, Link, BrowserRouter} from \"react-router-dom\";\n\nfunction App() {\n  const [isSetupCompleted, setIsSetupCompleted] = React.useState(false);\n\n  return (\n\n    <main>\n        <Router>\n            <Switch>\n                <Route path=\"/you-kno/\" component={StartPage} exact />\n                <Route path=\"/game\" component={GamePlayPage} />\n            </Switch>\n        </Router>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n\n        <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}